<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.employee.dao.EmpTaApplyDao">

	<!-- 휴가신청리스트 목록 조회 -->
	<select id="listEmpTaApply" resultType="kr.happyjob.study.employee.model.EmpTaApplyModel">
		
		SET @rownum:=0;
		
		SELECT 
			  @rownum:=@rownum+1 as row_num	
			   ,CASE WHEN vr.vac_type = '1' THEN '반차' 
	      			WHEN vr.vac_type = '2' THEN '월차' 
				    ELSE '연차' END as vac_type
		      ,ui.loginID
		      ,ui.name
		      ,DATE_FORMAT(vr.vac_sdate, '%Y-%m-%d') as vac_sdate
		      ,DATE_FORMAT(vr.vac_edate, '%Y-%m-%d') as vac_edate
		      ,vr.vac_bo
              ,CASE WHEN vr.vac_stat = '1' THEN '승인대기중' 
	      		WHEN vr.vac_stat = '2' THEN '승인' 
			    ELSE '반려' END as vac_stat
		FROM tb_vacation_request vr 
		     LEFT JOIN tb_userinfo ui ON vr.loginID = ui.loginID
	
   		 <where>
		       <if test="(from_date != null) and (!from_date.equals(''))">
		            and vac_sdate <![CDATA[>=]]> STR_TO_DATE(#{from_date}, '%Y-%m-%d')  
		       </if>
		       <if test="(to_date != null) and (!to_date.equals(''))">
		            and vac_edate <![CDATA[<=]]> STR_TO_DATE(#{to_date}, '%Y-%m-%d')  
		       </if>	
		       <if test="(vactype != null) and (!vactype.equals(''))">
		            and vac_type = #{vactype}
		       </if>	
		       <if test="(apptype != null) and (!apptype.equals(''))">
		            and vac_stat = #{apptype} 
		       </if>	
		       	    
  			</where> 
  
	ORDER BY row_num desc
	LIMIT #{pageIndex}, #{pageSize}
		
	</select>
	
	<!-- 휴가신청리스트 목록 총 갯수 조회 -->
	<select id="countListEmpTaApply" resultType="int">
		
			SELECT COUNT(1) AS tot_cnt 
			from tb_vacation_request vr 
			     left join tb_userinfo ui on vr.loginID = ui.loginID
		   <where>
		       <if test="(from_date != null) and (!from_date.equals(''))">
		            and vac_sdate <![CDATA[>=]]> STR_TO_DATE(#{from_date}, '%Y-%m-%d')  
		       </if>
		       <if test="(to_date != null) and (!to_date.equals(''))">
		            and vac_edate <![CDATA[<=]]> STR_TO_DATE(#{to_date}, '%Y-%m-%d')  
		       </if>	
		       <if test="(vactype != null) and (!vactype.equals(''))">
		            and vac_type = #{vactype}
		       </if>	
		       <if test="(apptype != null) and (!apptype.equals(''))">
		            and vac_stat = #{apptype} 
		       </if>	
		       	    
  			</where> 
	</select>
	
	<!-- 로그인한 사람의 휴가 일수 조회 -->
	<select id = "listLoginVac" resultType="kr.happyjob.study.employee.model.EmpTaApplyRemainVacModel">
		SELECT IFNULL(MAX(dva_tot),0) dva_tot 
     		  ,IFNULL(MAX(dva_rest) ,0) dva_rest 
     		  ,IFNULL(dva_tot - dva_rest,0) dva_use 
		FROM tb_dtlvacation
		WHERE loginID = #{loginID} 
	</select>
	
	<!-- 로그인한 사람의 휴가 일수 조회 -->
	<select id = "vacCnt" resultType="kr.happyjob.study.employee.model.EmpTaApplyRemainVacModel">
		SELECT IFNULL(MAX(dva_tot),0) dva_tot 
     		  ,IFNULL(MAX(dva_rest) ,0) dva_rest 
     		  ,IFNULL(dva_tot - dva_rest,0) dva_use 
     		  ,IFNULL(MAX(dva_bancha),0) dva_bancha
		FROM tb_dtlvacation
		WHERE loginID = #{loginID} 
	</select>
	
	<!-- 반려 사유 및 반려자 조회 -->
	<select id ="selectEmpDtlApply" resultType="kr.happyjob.study.employee.model.EmpTaApplyModel">
		
		SELECT vac_bo
			 ,vac_rere
		FROM tb_vacation_request  
		WHERE vac_no = #{row_num}  
	
	</select>
	
	<!-- 로그인한 사람의 기본정보 조회 -->
	<select id ="empTaLoginInfo" resultType="kr.happyjob.study.employee.model.EmpTaApplyModel">
		
		SELECT     ui.loginID
				  ,ui.name 
       			  ,de.dept_name 
		FROM tb_userinfo ui
        inner join tb_dept de on ui.dept_cd = de.dept_cd
		WHERE loginID = #{loginID}

	</select>
	
	<insert id="insertEmpTaApply">
	 
	    <selectKey resultType="int" keyProperty="vac_no" order="BEFORE">
            select ifnull(max(vac_no),0) + 1 from tb_vacation_request 
        </selectKey>			 
		  insert into tb_vacation_request
		      (
		           vac_no
		         , loginID
		         , vac_tel
		         , vac_type
		         , vac_sdate
		         , vac_edate
		         , vac_re
		         , vac_stat
		         , vac_rdate 
		      ) values (
		          #{vac_no}
		         ,#{loginID}
		         ,#{tel}
		         ,#{fvactype}
		         ,#{start_date}
		         ,#{end_date} 
		         ,#{vac_content}
		         ,1
		         ,NOW()
		      )
	</insert>

	<!-- Approval Waiting 단건 조회 -->
	<select id ="selectWaitingEmpApply" resultType="kr.happyjob.study.employee.model.EmpTaApplyModel">
		
		        select 
                dt.dept_name
               ,vac.vac_type
               ,ui.name
               ,vac.loginID
               ,DATE_FORMAT(vac.vac_sdate,'%Y-%m-%d') as vac_sdate
               ,DATE_FORMAT(vac.vac_edate,'%Y-%m-%d') as vac_edate
               ,vac.vac_re
               ,vac.vac_tel
               ,vac.vac_rdate

         from tb_vacation_request vac 
           inner join tb_userinfo ui on vac.loginID = ui.loginID
             inner join tb_dept dt on dt.dept_cd = ui.dept_cd
         WHERE vac_no = #{row_num}     
   </select>
	
	<update id="updateEmpTaApply">
		   update tb_vacation_request
		   		set      vac_type  = #{fvactype}
		   			,    vac_sdate = #{start_date} 
		   			, 	 vac_edate = #{end_date} 
		   			,    vac_re    = #{vac_content}
		   			,    vac_tel   = #{tel}  
		   		where vac_no = #{vac_no}  
	</update> 
	
	<delete id="deleteEmpTaApply">
		 delete from  tb_vacation_request
			    where vac_no = #{vac_no}  
	</delete>
	
	<update id="approve">
		   update tb_vacation_request
		   		set vac_stat = '2'
		   		   ,vac_bo = #{loginIDa}
		   		   ,vac_adate = #{nowdate}
		   		where vac_no = #{vac_no}  
	</update> 
	<update id="reject">
		   update tb_vacation_request
		   		set vac_stat = '3'
		   		   ,vac_rere = #{rejectre} 
		   		   ,vac_bo = #{loginIDa}
		   		where vac_no = #{vac_no}  
	</update> 
	
	<select id="annualUse" resultType="int">
		SELECT LEFT(vac_edate - vac_sdate,LENGTH(vac_edate - vac_sdate) -13) + 1 vac_annual
			FROM tb_vacation_request
			WHERE vac_no = #{vac_no}
	</select>
	
	<update id="updateVac">
		UPDATE tb_dtlvacation SET dva_rest = #{yearsUse}
  			WHERE loginID = #{loginID}
	</update>
	
	<update id="updateVacbancha">
		UPDATE tb_dtlvacation 
			SET dva_rest = #{yearsUse}
			   ,dva_bancha = 0
	  		WHERE loginID = #{loginID}
	</update>
	
	<update id="updateVacbancha2">
		UPDATE tb_dtlvacation 
			SET dva_bancha = 1
	  		WHERE loginID = #{loginID}
	</update>
	
</mapper>